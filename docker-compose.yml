version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: rfp-analysis-db
    environment:
      POSTGRES_DB: rfp_analysis
      POSTGRES_USER: rfp_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rfp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rfp_user -d rfp_analysis"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rfp-analysis-api
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: rfp_analysis
      DB_USER: rfp_user
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: 7d
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      MAX_DOCUMENT_SIZE_MB: 25
      UPLOAD_DIR: uploads
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:80
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3001:3001"
    networks:
      - rfp-network
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:3001/api
    container_name: rfp-analysis-frontend
    ports:
      - "80:80"
    networks:
      - rfp-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  rfp-network:
    driver: bridge